#!/bin/sh
#
# Copyright (C) 2011 by Gabor Adam Toth <tg-gitzone at tgbit dot net>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

# only repo allowed for git pull/push
repo=$LOGNAME
# directory the repo is in, relative to $HOME
repo_dir='zones'
#repo_dir='.'

# allow ssh key add/del/list commands if this file exists
allow_key_mgmt_file='.ssh/authorized_keys_edit_allowed'

# paths
config=/etc/gitzone.conf
gitzone=/usr/bin/gitzone
git=/usr/bin/git
grep=/bin/grep

function error {
  echo "fatal: What do you think I am? A shell?"
  exit 128
}

if [ "$1" != "-c" ]; then error; fi
cmd=$2

if [[ "$cmd" == git-upload-pack* ]]; then
  $git upload-pack $repo_dir/$repo
elif [[ "$cmd" == git-receive-pack* ]]; then
  $git receive-pack $repo_dir/$repo
elif [[ "$cmd" == update-record* ]]; then
  cd $repo_dir/$repo/.git
  $gitzone $config update-record "$cmd"
elif [ -f $allow_key_mgmt_file ]; then
  if [ "$cmd" == list-keys ]; then
    cat .ssh/authorized_keys
  elif [[ "$cmd" == add-key* ]]; then
    key="${cmd:8}"
    echo "$key" >> .ssh/authorized_keys && \
      echo "key added"
  elif [[ "$cmd" == del-key* ]]; then
    key="${cmd:8}"
    $grep -v "$key" .ssh/authorized_keys > .ssh/authorized_keys-new && \
      mv .ssh/authorized_keys-new .ssh/authorized_keys && \
      echo "key deleted"
  else
    error
  fi
else
  error
fi
